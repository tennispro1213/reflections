How did viewing a diff between two versions of a file help you see the bug that
was introduced?

  It compared the two files line by line so I could see the changed lines easily.    

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

  Saves time in accessing older versions. Reduced naming problems.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

  Pros of manually choosing is that it prevents unnecessary saves and can save logically, so itâ€™s easier to compare previous files. Con is that one might not save enough or forget to save.   

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

  Git recognizes that users may have inter-related files that when modified affect the whole project so it allows all of the files in the project (repository) to be saved in one commit. Google Docs and other systems usually expect separate files/projects. 

How can you use the commands git log and git diff to view the history of files?

    git log is used to view the various versions of the files with their commit messages and git diff is used to compare two versions of the same file in history.

How might using version control make you more confident to make changes that
could break something?

    I know that I can always revert to a working version and see what changes I made.

Now that you have your workspace set up, what do you want to try using Git for?

    Work on FreeCodeCamp stuff using Git. Also upload my older 'work' -- actually tutorial projects -- to Github.
